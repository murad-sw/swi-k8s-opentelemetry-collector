name: Update Docker Images

on:
  workflow_dispatch:
  schedule:
    - cron: '0 8 * * 1'

jobs:
  update-images:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with: 
          python-version: '3.11'

      - name: Install deps
        run: pip install ruamel.yaml requests packaging PyGithub

      - name: Check for existing PR
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          EXISTING_PR=$(gh pr list --state open --head update-images --json number -q '.[0].number')
          echo "EXISTING_PR=$EXISTING_PR" >> $GITHUB_ENV

      - name: Setup update branch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [ -z "${{ env.EXISTING_PR }}" ]; then
            # Create new branch if PR doesn't exist
            BASE_SHA=$(gh api repos/${{ github.repository }}/git/ref/heads/master -q .object.sha)
            gh api repos/${{ github.repository }}/git/refs \
              -f ref="refs/heads/update-images" \
              -f sha="$BASE_SHA"
          fi
          git fetch origin update-images
          git checkout update-images

      - name: Run updater
        run: |
          python utils/update_images.py --github-token ${{ secrets.GITHUB_TOKEN }}
          if [ $? -ne 0 ]; then
            echo "No changes detected."
            exit 0
          fi

      - name: Check for changes
        id: update_check
        run: |
          if [ -f "changes.log" ]; then
            echo "changes_exist=true" >> $GITHUB_OUTPUT
          else
            echo "changes_exist=false" >> $GITHUB_OUTPUT
          fi

      - name: Create API-signed commits
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Get SHA of the values.yaml file
          VALUES_PATH="deploy/helm/values.yaml"
          VALUES_SHA=$(gh api repos/${{ github.repository }}/contents/$VALUES_PATH?ref=update-images -q .sha)
          
          # Create commit for values.yaml
          VALUES_CONTENT=$(base64 -w0 $VALUES_PATH)
          gh api repos/${{ github.repository }}/contents/$VALUES_PATH \
            --method PUT \
            -f message="chore: update Docker image versions" \
            -f content="$VALUES_CONTENT" \
            -f sha="$VALUES_SHA" \
            -f branch="update-images"

      - name: Update existing PR
        if: env.EXISTING_PR != '' && steps.update_check.outputs.changes_exist == 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          CHANGES=$(cat changes.log)
          EXISTING_BODY=$(gh pr view ${{ env.EXISTING_PR }} --json body -q .body)
          NEW_BODY="$EXISTING_BODY
          $CHANGES"
          gh pr edit ${{ env.EXISTING_PR }} --body "$NEW_BODY"

      - name: Create Pull Request
        if: env.EXISTING_PR == '' && steps.update_check.outputs.changes_exist == 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          CHANGES=$(cat changes.log)
          gh pr create \
            --title "Update Docker image versions" \
            --body "$CHANGES" \
            --head update-images \
            --base master

      - name: Clean up changes.log
        if: success() && steps.update_check.outputs.changes_exist == 'true'
        run: rm changes.log || true
